#!/usr/bin/env node

require('@clitools/base');
require('@clitools/keystore');

const { get, list, remove, create, clone } = require('./lib/git');

cli.program
    .option('backend', {
        alias: 'B',
        describe: 'Backend provider',
        choices: ['bitbucket', 'gitlab', 'github']
    })
    .command('create <name>', 'create new project and clone it', (program) => {
        program
            .demandOption('backend')
    }, ({ backend, name }) => {
        return create(backend, name)
            .then((url) => process.exit(
                clone(url)
                    .code
            ));
    })
    .command('get <id>', 'get inromation about a project by id (or path)', (program) => {
        program
            .demandOption('backend')
    }, ({ backend, id }) => {
        return get(backend, id)
            .then(cli.ui.print);
    })
    .command('rm <id>', 'delete project by id (or path)', (program) => {
        program
            .demandOption('backend')
    }, ({ backend, id }) => {
        return remove(backend, id)
            .then(() => process.exit(0));
    })
    .command('ls', 'list all projects', (program) => {
        program
            .demandOption('backend')
    }, ({ backend }) => {
        return list(backend)
            .then((projects) => {
                cli.ui.print('Listing projects:');
                cli.ui.print(
                    cli.ui.columns(
                        projects.map(
                            (project) => {
                                return cli._.pick(project, ['id', 'path', 'description']);
                            }
                        ), {
                            truncate: true,
                            truncateMarker: 'â€¦',
                            maxLineWidth: 'auto',
                            config: {
                                id: {
                                    minWidth: 36,
                                    headingTransform: () => cli.ui.color.bold('ID')
                                },
                                path: {
                                    minWidth: 40,
                                    headingTransform: () => cli.ui.color.bold('Path')
                                },
                                description: {
                                    maxWidth: 60,
                                    headingTransform: () => cli.ui.color.bold('Description')
                                }
                            }
                        }
                    )
                )
            });
    });

cli.run();